# Generated by Django 4.2.20 on 2025-07-07 14:17

from django.db import migrations, models
import django.db.models.deletion


def populate_supplier_foreign_keys(apps, schema_editor):
    """
    Populate the supplier foreign key field based on supplier_name
    """
    WholesalePurchase = apps.get_model('core', 'WholesalePurchase')
    Supplier = apps.get_model('core', 'Supplier')
    
    # Process each purchase
    for purchase in WholesalePurchase.objects.all():
        # Determine which supplier to link to
        if purchase.supplier_name:
            supplier_name = purchase.supplier_name
        else:
            supplier_name = 'Unknown Supplier'
        
        # Find the supplier
        try:
            supplier = Supplier.objects.get(name=supplier_name)
            purchase.supplier = supplier
            purchase.save()
        except Supplier.DoesNotExist:
            # Create the supplier if it doesn't exist
            supplier = Supplier.objects.create(
                name=supplier_name,
                is_active=True,
                notes='Created during migration'
            )
            purchase.supplier = supplier
            purchase.save()


def reverse_populate_supplier_foreign_keys(apps, schema_editor):
    """
    Remove foreign key relationships
    """
    WholesalePurchase = apps.get_model('core', 'WholesalePurchase')
    WholesalePurchase.objects.update(supplier=None)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_migrate_supplier_data'),
    ]

    operations = [
        migrations.AlterField(
            model_name='wholesalepurchase',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wholesale_purchases', to='core.supplier'),
        ),
        migrations.RunPython(
            populate_supplier_foreign_keys,
            reverse_populate_supplier_foreign_keys,
        ),
    ] 