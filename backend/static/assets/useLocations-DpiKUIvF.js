import{a as l}from"./api-CdhKsZ7p.js";import{r as n,q as g,g as P}from"./index-DV-V0oJl.js";function T(){const o=n([]),r=n([]),v=n([]),f=n(!0),c=n(null),a=n(""),p=n([]),u=n(""),h={Vending:"bg-blue-100 text-blue-800",Coffee:"bg-amber-100 text-amber-800",Snack:"bg-green-100 text-green-800",Drink:"bg-purple-100 text-purple-800"},w=g(()=>{const e={};return o.value.forEach(t=>{e[t.id]={}}),v.value.forEach(t=>{t.location&&(e[t.location]||(e[t.location]={}),e[t.location][t.machine_type]||(e[t.location][t.machine_type]=0),e[t.location][t.machine_type]++)}),e}),m=g(()=>{let e=r.value;if(a.value&&(a.value==="unassigned"?e=e.filter(t=>!t.route):e=e.filter(t=>t.route===a.value)),u.value.trim()){const t=u.value.toLowerCase().trim();e=e.filter(s=>s.name.toLowerCase().includes(t)||s.address.toLowerCase().includes(t))}return e}),L=g(()=>p.value),i=async()=>{f.value=!0;try{const e=await l.getLocations();r.value=e.data,o.value=e.data,await Promise.all([b(),y()])}catch(e){console.error("Error fetching locations:",e),c.value="Failed to load locations. Please try again later."}finally{f.value=!1}},b=async()=>{try{const e=await l.getMachines();v.value=e.data}catch(e){console.error("Error fetching machines:",e)}},y=async()=>{try{const e=await l.getRoutes();p.value=e.data.routes}catch(e){console.error("Error fetching routes:",e)}},E=async e=>{try{await l.createLocation(e),await i(),d()}catch(t){throw console.error("Error creating location:",t),c.value="Failed to create location. Please try again.",t}},F=async(e,t)=>{try{await l.updateLocation(e,t),await i(),d()}catch(s){throw console.error("Error updating location:",s),c.value="Failed to update location. Please try again.",s}},R=async e=>{try{await l.deleteLocation(e),await i(),d()}catch(t){throw console.error("Error deleting location:",t),c.value="Failed to delete location. Please try again.",t}},x=()=>{a.value?a.value==="unassigned"?o.value=r.value.filter(e=>!e.route):o.value=r.value.filter(e=>e.route===a.value):o.value=r.value},d=()=>{a.value="",o.value=r.value},C=()=>{a.value="",u.value="",o.value=r.value},M=e=>{if(!e||!e.address)return;const s=`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(e.address)}`;window.open(s,"_blank")};return P(i),{locations:o,allLocations:r,machines:v,loading:f,error:c,selectedRoute:a,availableRoutes:p,locationSearchText:u,machineTypeColors:h,locationMachines:w,filteredLocations:m,routes:L,fetchLocations:i,fetchRoutes:y,createLocation:E,updateLocation:F,deleteLocation:R,applyRouteFilter:x,clearRouteFilter:d,resetFilters:C,openMapForLocation:M}}export{T as u};
