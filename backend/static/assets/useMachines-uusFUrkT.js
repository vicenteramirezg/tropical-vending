import{a as t}from"./api-BWnkJ_0u.js";import{r as d,q as f}from"./index-Br9KxP_x.js";function x(){const p=d([]),i=d([]),l=d(!1),r=d(null),y=d(["3D14","AMS 39640","AMS GB624","AMS-LB9 Combo","AP Snack Shop 111","AP Snack Shop 133","AP Snack Shop 152-D","AP Snack Shop 6600","AP Snack Shop III D20C","AP Studio 3","Crane 147","Crane 148","Crane 157","Crane 158","Crane 168","Crane 172","Crane 180","Crane 181","Crane 452","Crane 784","Dixie Narco","Dixie Narco 276E","Dixie Narco 348C","Dixie Narco 368","Dixie Narco 368 12","Dixie Narco 368 R","Dixie Narco 36812","Dixie Narco 414 CC","Dixie Narco 501-C","Dixie Narco 501E","ISI 3177","Lektro Vending V599C Serie II","Royal Vendor 390-9","Royal Vendor 462-9","Royal Vendor 550-6","Royal Vendor 630-10","Royal Vendor 650-10","Royal Vendor 660","Royal Vendor 660-8","Royal Vendor 660-9","Royal Vendor 804-","Royal Vendor 804-13","Royal Vendor 804-9","Snack Mart 111 3000/Model: 301A","Snack Shop 111","Snack Shop 111 D206","Snack Shop 113","Snack Shop 6000","Snack Shop 6600","Snack Shop III 400 / Model:3014","Snack Shop LCM2","USA 3129","USI 3014A","USI 3166"]),S=f(()=>{const a={};return p.value.forEach(e=>{a[e.location]||(a[e.location]=[]),a[e.location].push(e)}),a});return{machines:p,locationMachines:i,loading:l,error:r,machineModels:y,groupedMachines:S,fetchMachines:async(a={})=>{l.value=!0,r.value=null;try{const e={};a.location&&(e.location=a.location),a.route&&(e.route=a.route),a.machineType&&(e.machine_type=a.machineType);const o=await t.getMachines(e);p.value=o.data}catch(e){console.error("Error fetching machines:",e),r.value="Failed to load machines. Please try again."}finally{l.value=!1}},fetchLocationMachines:async a=>{if(!a){i.value=[];return}l.value=!0,r.value=null;try{const o=(await t.getMachines({location:a})).data,h=await Promise.all(o.map(async c=>{try{const s=(await t.getMachineItems({machine:c.id})).data.map(n=>({id:n.product,name:n.product_name,slot:n.slot,current_stock:n.current_stock||0,stock_before:"",discarded:0,restocked:""}));return{...c,products:s}}catch(u){return console.error(`Error fetching products for machine ${c.id}:`,u),{...c,products:[]}}}));i.value=h}catch(e){console.error("Error fetching location machines:",e),r.value="Failed to load machines for this location. Please try again.",i.value=[]}finally{l.value=!1}},updateMachineProductData:async(a,e)=>{try{const o=i.value.find(c=>c.id===e);if(!o)return;const h=await t.getRestocks({visit:a,machine:e});if(h.data.length>0){const c=h.data[0],u=await t.getRestockEntries({visit_machine_restock:c.id});o.products.forEach(s=>{const n=u.data.find(M=>M.product===s.id);n&&(s.stock_before=n.stock_before||"",s.discarded=n.discarded||0,s.restocked=n.restocked||"")})}}catch(o){console.error("Error updating machine product data:",o)}},resetMachineData:()=>{i.value=[]},createMachine:async a=>{try{return await t.createMachine(a),!0}catch(e){return console.error("Error creating machine:",e),r.value="Failed to create machine. Please try again.",!1}},updateMachine:async(a,e)=>{try{return await t.updateMachine(a,e),!0}catch(o){return console.error("Error updating machine:",o),r.value="Failed to update machine. Please try again.",!1}},deleteMachine:async a=>{try{return await t.deleteMachine(a),!0}catch(e){return console.error("Error deleting machine:",e),r.value="Failed to delete machine. Please try again.",!1}},clearError:()=>{r.value=null}}}export{x as u};
